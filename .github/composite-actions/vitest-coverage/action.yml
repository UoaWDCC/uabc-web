name: "Vitest Coverage"
description: "Run Vitest coverage, compare with master, and comment on PR"

inputs:
  github-token:
    description: "GitHub token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Download All Coverage
      uses: actions/download-artifact@v4
      with:
        name: local-coverage
        path: coverage

    - name: Download Master Coverage Artifact
      id: download_master_coverage
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        set -e
        # Install jq if not present (for parsing JSON)
        if ! command -v jq &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y jq
        fi

        # Search up to the last 10 successful workflow runs on master for local-coverage artifact
        found_artifact=false
        for run_id in $(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs?branch=master&status=success&per_page=10" \
          | jq -r '.workflow_runs[].id'); do
          artifact_id=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/$run_id/artifacts" \
            | jq -r '.artifacts[] | select(.name=="local-coverage") | .id')
          if [ -n "$artifact_id" ]; then
            echo "Found local-coverage artifact in run $run_id (artifact id $artifact_id)"
            curl -L -H "Authorization: token $GITHUB_TOKEN" \
              -o master-coverage.zip \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts/$artifact_id/zip"
            unzip -o master-coverage.zip -d master-coverage
            found_artifact=true
            break
          fi
        done
        if [ "$found_artifact" = true ]; then
          echo "found_artifact=true" >> $GITHUB_ENV
        else
          echo "found_artifact=false" >> $GITHUB_ENV
          echo "Warning: No local-coverage artifact found in the last 10 successful master runs. Skipping coverage comparison."
        fi

    - name: 'Coverage Report (with compare)'
      if: env.found_artifact == 'true'
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        vite-config-path: './packages/test-config/src/configs/base-config.ts'
        json-summary-path: './coverage/coverage-summary.json'
        json-final-path: './coverage/coverage-final.json'
        json-summary-compare-path: './master-coverage/coverage-summary.json'

    - name: 'Coverage Report (no compare)'
      if: env.found_artifact != 'true'
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        vite-config-path: './packages/test-config/src/configs/base-config.ts'
        json-summary-path: './coverage/coverage-summary.json'
        json-final-path: './coverage/coverage-final.json'