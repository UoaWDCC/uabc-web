name: "Build Frontend"
description: "This workflow checks if the frontend builds are working correctly."

inputs:
  NEXT_PUBLIC_URL:
    description: "The public URL for the workspace."
    required: true
  NEXT_PUBLIC_API_URL:
    description: "The public API URL for the workspace."
    required: true
  NODE_ENV:
    description: "The node environment."
    required: false
  APP_INDEX_MODE:
    description: "The app index mode."
    required: false
  SMTP_HOST:
    description: "The SMTP host."
    required: false
  SMTP_USER:
    description: "The SMTP user."
    required: false
  SMTP_PASS:
    description: "The SMTP password."
    required: false
  PAYLOAD_SECRET:
    description: "The payload secret."
    required: false
  DATABASE_URI:
    description: "The database URI."

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        run_install: false

    - name: Restore node_modules cache
      uses: actions/cache/restore@v4
      id: cache
      with:
        path: |
          node_modules
          */node_modules
          packages/*/node_modules
          apps/*/node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Install dependencies if cache misses
      run: NODE_ENV=${{ inputs.NODE_ENV }} pnpm install --frozen-lockfile --ignore-scripts
      shell: bash

    - name: Restore Next.js cache
      uses: actions/cache@v4
      with:
        path: |
          apps/frontend/.next/cache
        key: ${{ runner.os }}-nextjs-frontend-${{ hashFiles('apps/frontend/*') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-frontend

    - name: Build frontend
      shell: bash
      env:
        NEXT_PUBLIC_URL: ${{ inputs.NEXT_PUBLIC_URL }}
        NEXT_PUBLIC_API_URL: ${{ inputs.NEXT_PUBLIC_API_URL }}
        NODE_ENV: ${{ inputs.NODE_ENV }}
        APP_INDEX_MODE: ${{ inputs.APP_INDEX_MODE }}
        SMTP_HOST: ${{ inputs.SMTP_HOST }}
        SMTP_USER: ${{ inputs.SMTP_USER }}
        SMTP_PASS: ${{ inputs.SMTP_PASS }}
        PAYLOAD_SECRET: ${{ inputs.PAYLOAD_SECRET }}
        DATABASE_URI: ${{ inputs.DATABASE_URI }}
      run: pnpm build --filter frontend
