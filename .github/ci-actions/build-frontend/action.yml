name: "Build Frontend"
description: "This workflow checks if the frontend builds are working correctly."

inputs:
  NEXT_PUBLIC_URL:
    description: "The public URL for the workspace."
    required: true
  NEXT_PUBLIC_API_URL:
    description: "The public API URL for the workspace."
    required: true
  NODE_ENV:
    description: "The node environment."
    required: false
  APP_INDEX_MODE:
    description: "The app index mode."
    required: false

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        run_install: false

    - name: Restore node_modules cache
      uses: actions/cache/restore@v4
      id: cache
      with:
        path: |
          node_modules
          */node_modules
          packages/*/node_modules
          apps/*/node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Install dependencies if cache misses
      run: NODE_ENV=${{ inputs.NODE_ENV }} pnpm install --frozen-lockfile --ignore-scripts
      shell: bash

    - name: Restore Next.js cache
      uses: actions/cache@v4
      with:
        path: |
          apps/frontend/.next/cache
        key: ${{ runner.os }}-nextjs-frontend-${{ hashFiles('apps/frontend/*') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-frontend

    - name: Check if build is needed
      id: turbo-ignore
      uses: ./.github/ci-actions/turbo-ignore-fallback
      with:
        workspace: frontend
      continue-on-error: true

    - name: Skip build if not needed
      if: steps.turbo-ignore.outcome == 'success' && steps.turbo-ignore.conclusion == 'success' && steps.turbo-ignore.outputs.exitcode == '0'
      run: exit 0
      shell: bash

    - name: Build frontend
      shell: bash
      env:
        NEXT_PUBLIC_URL: ${{ inputs.NEXT_PUBLIC_URL }}
        NEXT_PUBLIC_API_URL: ${{ inputs.NEXT_PUBLIC_API_URL }}
        NODE_ENV: ${{ inputs.NODE_ENV }}
        APP_INDEX_MODE: ${{ inputs.APP_INDEX_MODE }}
      run: pnpm turbo run build --filter=frontend --affected
