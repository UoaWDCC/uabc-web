services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      # args:
      #   - TURBO_TEAM=${TURBO_TEAM}
      #   - TURBO_TOKEN=${TURBO_TOKEN}
      #   - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}
      #   - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      #   - JWT_SECRET=${JWT_SECRET}
    restart: always
    ports:
      - 3001:3001
    networks:
      - app_network
    
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
      # args:
      #   DATABASE_URI: ${DATABASE_URI}
      #   PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      #   GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      #   GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      #   NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL}
      #   NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      #   JWT_SECRET: ${JWT_SECRET}
      #   TURBO_TEAM: ${TURBO_TEAM}
      #   TURBO_TOKEN: ${TURBO_TOKEN}
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - mongo
    networks:
      - app_network

  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    command:
      - --storageEngine=wiredTiger
    volumes:
      - data:/data/db
    logging:
      driver: none

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    external: true

volumes:
  data: